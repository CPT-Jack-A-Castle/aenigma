#!/usr/bin/env bash

################################################################################

### Set bash environment error management

set -eu

################################################################################

### Add padding to output

echo

################################################################################

### Determine script execution directory and install directory.

exec_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

exec_dir_trim_2="$( echo ${exec_dir} | cut -f 1,2,3 -d'/')"
exec_dir_trim_3="$( echo ${exec_dir} | cut -f 1,2,3,4 -d'/')"

if [ -f "${exec_dir_trim_2}/functions" ]
then
	exec_dir_root="${exec_dir_trim_2}"
else
	if [ -f "${exec_dir_trim_3}/functions" ]
	then
		exec_dir_root="${exec_dir_trim_3}"
	else
		echo "Functions file not found in any second or third level parent directory of: | ${exec_dir} |."
		echo
		echo "Exiting..."
		echo
        exit 1
	fi
fi

### Source local functions file.

. "$exec_dir_root/functions"

################################################################################

### Define formatting

synthia-define_formatting

################################################################################

### Check for root user runtime

synthia-check_root

################################################################################

### Source dna

synthia-source_dna

################################################################################

### Define variables

synthia-define_vars

################################################################################

### Log script

dna-log_script

################################################################################

### Read conf settings

dna-read_conf_settings

################################################################################

if [ ! "${cluster_mode-null}" = "primary" ]
then
	dna-echo -e "This script must only be run on the primary node of your ${proj_name} instance."
	dna-exit
fi

################################################################################

### Fetch IP addresses for this machine

dna-get_public_ipv4

dna-check_ipv6_connectivity

### Check to see if this machine's IPs have changed since last install / clusterization

this_registered_ipv4="$(cat openspace42/aenigma/conf/cluster/nodes/nodes_db_ipv4 | head -1 | xargs)"

this_registered_ipv6="$(cat openspace42/aenigma/conf/cluster/nodes/nodes_db_ipv6 | head -1 | xargs)"

if [ ! "${this_ipv4}" = "${this_registered_ipv4}" ]
then
	dna-echo -e "The public IPv4 address for this machine appears to have changed since the last install or the last run of the clusterize script."
	dna-echo -m "It now appears to be: | ${y-}${this_ipv4}${n-} |."
	dna-echo -m "This node, however, appears to be registered with the following: | ${y-}${this_registered_ipv4}${n-} |."
	dna-echo -m "Please re-run the installation to update the records for this machine on the nodes database."
	dna-exit
fi

if [ ! "${this_ipv6}" = "${this_registered_ipv6}" ]
then
	dna-echo -e "The public IPv6 address for this machine appears to have changed since the last install or the last run of the clusterize script."
	dna-echo -m "It now appears to be: | ${y-}${this_ipv6}${n-} |."
	dna-echo -m "This node, however, appears to be registered with the following: | ${y-}${this_registered_ipv6}${n-} |."
	dna-echo -m "Please re-run the installation to update the records for this machine on the nodes database."
	dna-exit
fi

################################################################################

### Update routing info on this machine

aenigma-update_routing_info

### Push and update routing info on all secondary nodes to allow them to connect to each other correctly.

aenigma-push_routing_info
