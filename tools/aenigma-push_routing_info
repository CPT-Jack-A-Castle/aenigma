#!/usr/bin/env bash

################################################################################

### Set bash environment error management

set -eu

################################################################################

### Add padding to output

echo

################################################################################

### Determine script execution directory and install directory.

if [ -L "${BASH_SOURCE}" ]
then

    ### This file is being executed via a symlink.
    ### Identify the parent directory of the target file

    link_target="$(readlink ${BASH_SOURCE})"
    exec_dir="${link_target%/*}"

else

    ### This file is being directly executed.
    ### Identify our parent directory.

    exec_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

fi

exec_dir_trim_2="$( echo ${exec_dir} | cut -f 1,2,3 -d'/')"
exec_dir_trim_3="$( echo ${exec_dir} | cut -f 1,2,3,4 -d'/')"

if [ -f "${exec_dir_trim_2}/functions" ]
then
	exec_dir_root="${exec_dir_trim_2}"
else
	if [ -f "${exec_dir_trim_3}/functions" ]
	then
		exec_dir_root="${exec_dir_trim_3}"
	else
		echo "Functions file not found in any second or third level parent directory of: | ${exec_dir} |."
		echo
		echo "Exiting..."
		echo
        exit 1
	fi
fi

### Source local functions file.

. "$exec_dir_root/functions"

################################################################################

### Define formatting

synthia-define_formatting

################################################################################

### Check for root user runtime

synthia-check_root

################################################################################

### Source dna

synthia-source_dna

################################################################################

### Define variables

synthia-define_vars

################################################################################

### Read conf settings

dna-read_conf_settings

################################################################################

### Touch temp dir

dna-touch_tmp_project_dir

################################################################################

### Log script

dna-log_script

################################################################################

### Ensure cluster is enabled and this is the primary node.

if [ "${cluster_enabled}" = "single" ]
then
	dna-echo -e "This script is only intended to be executed when running ${project_name} in a cluster of several nodes."
	dna-exit
fi

if [ "${cluster_mode-null}" = "secondary" ]
then
	dna-echo -e "This script must only be run on the primary node of your ${project_name} instance."
	dna-exit
fi

################################################################################

if [ ! -f "${nodes_db_ipv4_path}" ]
then
	dna-echo -e " | ${n-}nodes_db${r-} | file not found."
	dna-echo -m "Either the initial installation was never completed or the file was somehow removed."
	dna-echo -m "Re-run the installation to fix this."
	dna-exit
fi

################################################################################

aenigma-check_ip_info_current

################################################################################

### Update routing info on this machine

aenigma-update_routing_info

### Push and update routing info on all secondary nodes to allow them to connect to each other correctly.

aenigma-push_routing_info
